def minus_convertor(users: list, time: bool = False):
    """Функция ля конвертирования списка экземпляров класса User в pandas.DataFrame"""
    # Импортируем pandas
    import pandas as pd

    d = {'id': [], 'day_or_month_contract': [], "blocked": [], 'Добавление в Обращались с номеров': [],
         'Обращение в службу заботы о клиентах': [], 'Выключение IPTV-пакета(Event)': [],
         'Включение IPTV-пакета(Event)': [],
         'Включение услуги "Ограничение функций ТВ"': [], 'Отключение услуги Аренда ТВ-приставки': [],
         'Оборудование': [], 'Изменение истории': [], 'Продление действия тарифа': [], 'Предложение IPTV': [],
         'Активация точки подключения на сутки': [], 'Смена Тарифа(Event)': [], 'Удаление из Обращались с номеров': [],
         'Смена пароля(Event)': [], 'Предложение ТВ': [], 'Внутреннее сообщение': [], 'Операция с mac-адресом': [],
         'Закрепление сообщения': [], 'Перенос денежных средств': [], 'Изменение данных клиента': [],
         'Возвращение клиента': [], 'Уведомления: подключение': [], 'Уведомления: подтверждение': [],
         'Состояние клиентского оборудования': [], 'Смена схемы оплаты': [], 'Включение услуги "IPTV-Бонус"': [],
         'Включена 20% скидка': [], 'Включение услуги Аренда ТВ-приставки': [], 'Отключение услуги "IPTV-Бонус"': [],
         'Отключение скидки 20%': [], 'Предложение тарифа': [], 'Активация гарантированного платежа': [],
         'Включение интернета на 20 минут(Event)': [], 'Изменение контактных телефонов': [], 'Внесение': [],
         'Смена IP-адреса': [], 'Блокировка': [], 'Реестр договоров': [], 'Смена следующего тарифа': [],
         'Предложение акции "Пригласи друга"': [], 'Предложение ТВ-пакета': [], 'Предложение автоплатежа': [],
         'Активация ГП с IVR': [], 'Включение Бесплатной аренды': [], 'Замена оборудования': [],
         'Удаление телефона из записи': [], 'Без границ бесплатно. Включение(Event)': [],
         'Отключение скидки(Event)': [],
         'Включена 30% скидка': [], 'Активация автоматического гарантированного платежа': [],
         'Отключение услуги Автоплатёж(Event)': [], 'Расторжение': [],
         'Включена рассрочка за "Wi-Fi маршрутизатор 2.4 ГГц - TP-LINK WR-850N или аналог"': [],
         'Отмена гарантированного платежа': [], 'Манипуляции с оборудованием': [], 'Включена 10% скидка': [],
         'Блокировка лицевого счета': [], 'Включение блокировки лицевого счета': [],
         'Чек лист выполненных работ при регистрации': [], 'Разблокировка': [], 'Добавление IP-адреса': [],
         'Удаление ip-адреса': [], 'Предложение расширенной гарантии на ТВ приставку': [],
         'Без границ бесплатно. Отключение(Event)': [], 'Уведомления: отключение': [], 'Отключение скидки 10%': [],
         'Включение рассрочки за "Подключение"': [], 'Окончание рассрочки за подключение': [],
         'Предложение доп.гарантии на роутер': [], 'Предложение роутера': [], 'Тайный покупатель': [],
         'Возвращение гарантированного платежа': [], 'Включена рассрочка за "IPTV-приставка"': [],
         'Включение старых условий аренды': [], 'Информер ВК. Показ': [], 'Включение интернета на 20 минут': [],
         'Показ информатора об изменении уведомлений через ВК платформу': [], 'Гарантированный платеж за деньги': [],
         'Просмотр раздела Тайный покупатель': [], 'Включение интернета на 20 минут с IVR': [],
         'Турбокнопка платно (1 час)': [], 'Включение автоматической активации ГП': [],
         'Отключение услуги Автоплатёж': [], 'Информер ВК. Закрытие': [], 'Виртуальное бессмертие. Включение': [],
         'Виртуальное бессмертие. Использование': [], "Без границ бесплатно. Отключение": [],
         'Принято заявление и доп. соглашение по переезду': [], 'Смена пароля': [],
         'Абонент оставил отзыв в Личном кабинете': [],
         'Получение подарка в ЛК: сутки интернета на максимальной скорости': [],
         'Получение подарка в ЛК: 1 месяц бесплатного просмотра IPTV': [], 'Включение IPTV-пакета': [],
         'Выключение IPTV-пакета': [], 'Смена тарифа': [], 'Включение ограничения функций ТВ': [],
         'Без границ платно. Отключение': [], 'Турбокнопка платно (1 сутки)': [], 'Турбокнопка бесплатно': [],
         'Без границ бесплатно. Включение': [], 'Без границ платно. Включение': [],
         'Виртуальное бессмертие. Отключение': [], 'Тайный покупатель. Отправлена анкета': [], 'Бонус-скорость': [],
         'Отключение  ограничения функций ТВ': [], 'Изменение пакета HD. Закрытие лендинг-информера': [],
         'Родительский контроль. Включение': [], 'Отключение управления услугами по паролю': [],
         'Родительский контроль. Выключение': [], 'Восстановление пароля': [],
         'Становление участником бонусной программы': [], 'Изменение схемы оплаты': [], 'Футболка Ситилинк': [],
         'Отключение автоматической активации ГП': [],
         'Закрытие информатора об изменении уведомлений через ВК платформу': [],
         'Включение управления услугами по паролю': [], 'Общий счет. Отсоединение реципиента': [],
         'Общий счет. Отсоединение от донора': [], 'Отключение услуги "Стоп-тариф"': [],
         'Подписка на ivi. Включение триала': [], 'Подписка на ivi. Отключение автопродления подписки': [],
         'Отключение скидки': []}
    t2 = {'Добавление в Обращались с номеров(t)': [],
          'Обращение в службу заботы о клиентах(t)': [], 'Выключение IPTV-пакета(Event)(t)': [],
          'Включение IPTV-пакета(Event)(t)': [],
          'Включение услуги "Ограничение функций ТВ"(t)': [], 'Отключение услуги Аренда ТВ-приставки(t)': [],
          'Оборудование(t)': [], 'Изменение истории(t)': [], 'Продление действия тарифа(t)': [],
          'Предложение IPTV(t)': [],
          'Активация точки подключения на сутки(t)': [], 'Смена Тарифа(Event)(t)': [],
          'Удаление из Обращались с номеров(t)': [],
          'Смена пароля(Event)(t)': [], 'Предложение ТВ(t)': [], 'Внутреннее сообщение(t)': [],
          'Операция с mac-адресом(t)': [],
          'Закрепление сообщения(t)': [], 'Перенос денежных средств(t)': [], 'Изменение данных клиента(t)': [],
          'Возвращение клиента(t)': [], 'Уведомления: подключение(t)': [], 'Уведомления: подтверждение(t)': [],
          'Состояние клиентского оборудования(t)': [], 'Смена схемы оплаты(t)': [],
          'Включение услуги "IPTV-Бонус"(t)': [],
          'Включена 20% скидка(t)': [], 'Включение услуги Аренда ТВ-приставки(t)': [],
          'Отключение услуги "IPTV-Бонус"(t)': [],
          'Отключение скидки 20%(t)': [], 'Предложение тарифа(t)': [], 'Активация гарантированного платежа(t)': [],
          'Включение интернета на 20 минут(Event)(t)': [], 'Изменение контактных телефонов(t)': [], 'Внесение(t)': [],
          'Смена IP-адреса(t)': [], 'Блокировка(t)': [], 'Реестр договоров(t)': [], 'Смена следующего тарифа(t)': [],
          'Предложение акции "Пригласи друга"(t)': [], 'Предложение ТВ-пакета(t)': [], 'Предложение автоплатежа(t)': [],
          'Активация ГП с IVR(t)': [], 'Включение Бесплатной аренды(t)': [], 'Замена оборудования(t)': [],
          'Удаление телефона из записи(t)': [], 'Без границ бесплатно. Включение(Event)(t)': [],
          'Отключение скидки(Event)(t)': [],
          'Включена 30% скидка(t)': [], 'Активация автоматического гарантированного платежа(t)': [],
          'Отключение услуги Автоплатёж(Event)(t)': [], 'Расторжение(t)': [],
          'Включена рассрочка за "Wi-Fi маршрутизатор 2.4 ГГц - TP-LINK WR-850N или аналог"(t)': [],
          'Отмена гарантированного платежа(t)': [], 'Манипуляции с оборудованием(t)': [], 'Включена 10% скидка(t)': [],
          'Блокировка лицевого счета(t)': [], 'Включение блокировки лицевого счета(t)': [],
          'Чек лист выполненных работ при регистрации(t)': [], 'Разблокировка(t)': [], 'Добавление IP-адреса(t)': [],
          'Удаление ip-адреса(t)': [], 'Предложение расширенной гарантии на ТВ приставку(t)': [],
          'Без границ бесплатно. Отключение(Event)(t)': [], 'Уведомления: отключение(t)': [],
          'Отключение скидки 10%(t)': [],
          'Включение рассрочки за "Подключение"(t)': [], 'Окончание рассрочки за подключение(t)': [],
          'Предложение доп.гарантии на роутер(t)': [], 'Предложение роутера(t)': [], 'Тайный покупатель(t)': [],
          'Возвращение гарантированного платежа(t)': [], 'Включена рассрочка за "IPTV-приставка"(t)': [],
          'Включение старых условий аренды(t)': [], 'Информер ВК. Показ(t)': [],
          'Включение интернета на 20 минут(t)': [],
          'Показ информатора об изменении уведомлений через ВК платформу(t)': [],
          'Гарантированный платеж за деньги(t)': [],
          'Просмотр раздела Тайный покупатель(t)': [], 'Включение интернета на 20 минут с IVR(t)': [],
          'Турбокнопка платно (1 час)(t)': [], 'Включение автоматической активации ГП(t)': [],
          'Отключение услуги Автоплатёж(t)': [], 'Информер ВК. Закрытие(t)': [],
          'Виртуальное бессмертие. Включение(t)': [],
          'Виртуальное бессмертие. Использование(t)': [], "Без границ бесплатно. Отключение(t)": [],
          'Принято заявление и доп. соглашение по переезду(t)': [], 'Смена пароля(t)': [],
          'Абонент оставил отзыв в Личном кабинете(t)': [],
          'Получение подарка в ЛК: сутки интернета на максимальной скорости(t)': [],
          'Получение подарка в ЛК: 1 месяц бесплатного просмотра IPTV(t)': [], 'Включение IPTV-пакета(t)': [],
          'Выключение IPTV-пакета(t)': [], 'Смена тарифа(t)': [], 'Включение ограничения функций ТВ(t)': [],
          'Без границ платно. Отключение(t)': [],
          'Турбокнопка платно (1 сутки)(t)': [], 'Турбокнопка бесплатно(t)': [],
          'Без границ бесплатно. Включение(t)': [], 'Без границ платно. Включение(t)': [],
          'Виртуальное бессмертие. Отключение(t)': [], 'Тайный покупатель. Отправлена анкета(t)': [],
          'Бонус-скорость(t)': [],
          'Отключение  ограничения функций ТВ(t)': [], 'Изменение пакета HD. Закрытие лендинг-информера(t)': [],
          'Родительский контроль. Включение(t)': [], 'Отключение управления услугами по паролю(t)': [],
          'Родительский контроль. Выключение(t)': [], 'Восстановление пароля(t)': [],
          'Становление участником бонусной программы(t)': [], 'Изменение схемы оплаты(t)': [],
          'Футболка Ситилинк(t)': [],
          'Отключение автоматической активации ГП(t)': [],
          'Закрытие информатора об изменении уведомлений через ВК платформу(t)': [],
          'Включение управления услугами по паролю(t)': [], 'Общий счет. Отсоединение реципиента(t)': [],
          'Общий счет. Отсоединение от донора(t)': [], 'Отключение услуги "Стоп-тариф"(t)': [],
          'Подписка на ivi. Включение триала(t)': [], 'Подписка на ivi. Отключение автопродления подписки(t)': [],
          'Отключение скидки(t)': []}
    for key in d.keys():
        for i in users:
            d[key].append(-1)
    for key in t2.keys():
        for i in users:
            t2[key].append(-1)
    # Добовление параметров в словарь
    for y, i in enumerate(users, start=0):
        d["id"][y] = i.id
        d["day_or_month_contract"][y] = i.day_or_month_contract
        d['blocked'][y] = i.blocked
        # i.events события этого юзера
        type_event = {}
        temp = {}
        for x in i.events:
            if not len(type_event.keys()) == 0:

                for z in type_event.keys():
                    if x.type_event == z:
                        type_event[z].append(x.time)
                    else:
                        temp.update({x.type_event: [x.time]})
            else:
                temp.update({x.type_event: [x.time]})
            type_event.update(temp)
            if d[x.type_event][y] == -1:
                d[x.type_event][y] += 2
            else:
                d[x.type_event][y] += 1
        for key in type_event.keys():
            time = 99999999898985451252545554545454551514514599999999999999999999999999999999999999999999999999999999999
            for z in type_event[key]:
                from datetime import datetime

                d1 = datetime.strptime("2021-04-29 23:52:28", "%Y-%m-%d %H:%M:%S")

                d2 = datetime.strptime(z, "%Y-%m-%d %H:%M:%S")
                d3 = d1 - d2
                d4 = d3.seconds + (d3.days * 24 * 3600)
                if d4 < time:
                    time = d4
            t2[key + "(t)"][y] = time
        # i.lk_events события этого юзера
        type_event = {}
        temp = {}
        for x in i.lk_events:
            if not len(type_event.keys()) == 0:

                for z in type_event.keys():
                    if x.type_event == z:
                        type_event[z].append(x.time)
                    else:
                        temp.update({x.type_event: [x.time]})
            else:
                temp.update({x.type_event: [x.time]})
            type_event.update(temp)
            if d[x.type_event][y] == -1:
                d[x.type_event][y] += 2
            else:
                d[x.type_event][y] += 1
        for key in type_event.keys():
            time = 99999999898985451252545554545454551514514599999999999999999999999999999999999999999999999999999999999
            for z in type_event[key]:
                from datetime import datetime

                d1 = datetime.strptime("2021-04-29 23:52:28", r"%Y-%m-%d %H:%M:%S")

                d2 = datetime.strptime(z, r"%Y-%m-%d %H:%M:%S")
                d3 = d1 - d2
                d4 = d3.seconds + (d3.days * 24 * 3600)
                if d4 < time:
                    time = d4
            t2[key + "(t)"][y] = time

        # Заполнение пропусков в таблице
    if time:
        d.update(t2)
    hr = pd.DataFrame(data=d)
    return hr


def convertor(users: list, time: bool = False):
    """Функция ля конвертирования списка экземпляров класса User в pandas.DataFrame"""
    # Импортируем pandas
    import pandas as pd

    d = {'id': [], 'day_or_month_contract': [], "blocked": [], 'Добавление в Обращались с номеров': [],
         'Обращение в службу заботы о клиентах': [], 'Выключение IPTV-пакета(Event)': [],
         'Включение IPTV-пакета(Event)': [],
         'Включение услуги "Ограничение функций ТВ"': [], 'Отключение услуги Аренда ТВ-приставки': [],
         'Оборудование': [], 'Изменение истории': [], 'Продление действия тарифа': [], 'Предложение IPTV': [],
         'Активация точки подключения на сутки': [], 'Смена Тарифа(Event)': [], 'Удаление из Обращались с номеров': [],
         'Смена пароля(Event)': [], 'Предложение ТВ': [], 'Внутреннее сообщение': [], 'Операция с mac-адресом': [],
         'Закрепление сообщения': [], 'Перенос денежных средств': [], 'Изменение данных клиента': [],
         'Возвращение клиента': [], 'Уведомления: подключение': [], 'Уведомления: подтверждение': [],
         'Состояние клиентского оборудования': [], 'Смена схемы оплаты': [], 'Включение услуги "IPTV-Бонус"': [],
         'Включена 20% скидка': [], 'Включение услуги Аренда ТВ-приставки': [], 'Отключение услуги "IPTV-Бонус"': [],
         'Отключение скидки 20%': [], 'Предложение тарифа': [], 'Активация гарантированного платежа': [],
         'Включение интернета на 20 минут(Event)': [], 'Изменение контактных телефонов': [], 'Внесение': [],
         'Смена IP-адреса': [], 'Блокировка': [], 'Реестр договоров': [], 'Смена следующего тарифа': [],
         'Предложение акции "Пригласи друга"': [], 'Предложение ТВ-пакета': [], 'Предложение автоплатежа': [],
         'Активация ГП с IVR': [], 'Включение Бесплатной аренды': [], 'Замена оборудования': [],
         'Удаление телефона из записи': [], 'Без границ бесплатно. Включение(Event)': [],
         'Отключение скидки(Event)': [],
         'Включена 30% скидка': [], 'Активация автоматического гарантированного платежа': [],
         'Отключение услуги Автоплатёж(Event)': [], 'Расторжение': [],
         'Включена рассрочка за "Wi-Fi маршрутизатор 2.4 ГГц - TP-LINK WR-850N или аналог"': [],
         'Отмена гарантированного платежа': [], 'Манипуляции с оборудованием': [], 'Включена 10% скидка': [],
         'Блокировка лицевого счета': [], 'Включение блокировки лицевого счета': [],
         'Чек лист выполненных работ при регистрации': [], 'Разблокировка': [], 'Добавление IP-адреса': [],
         'Удаление ip-адреса': [], 'Предложение расширенной гарантии на ТВ приставку': [],
         'Без границ бесплатно. Отключение(Event)': [], 'Уведомления: отключение': [], 'Отключение скидки 10%': [],
         'Включение рассрочки за "Подключение"': [], 'Окончание рассрочки за подключение': [],
         'Предложение доп.гарантии на роутер': [], 'Предложение роутера': [], 'Тайный покупатель': [],
         'Возвращение гарантированного платежа': [], 'Включена рассрочка за "IPTV-приставка"': [],
         'Включение старых условий аренды': [], 'Информер ВК. Показ': [], 'Включение интернета на 20 минут': [],
         'Показ информатора об изменении уведомлений через ВК платформу': [], 'Гарантированный платеж за деньги': [],
         'Просмотр раздела Тайный покупатель': [], 'Включение интернета на 20 минут с IVR': [],
         'Турбокнопка платно (1 час)': [], 'Включение автоматической активации ГП': [],
         'Отключение услуги Автоплатёж': [], 'Информер ВК. Закрытие': [], 'Виртуальное бессмертие. Включение': [],
         'Виртуальное бессмертие. Использование': [], "Без границ бесплатно. Отключение": [],
         'Принято заявление и доп. соглашение по переезду': [], 'Смена пароля': [],
         'Абонент оставил отзыв в Личном кабинете': [],
         'Получение подарка в ЛК: сутки интернета на максимальной скорости': [],
         'Получение подарка в ЛК: 1 месяц бесплатного просмотра IPTV': [], 'Включение IPTV-пакета': [],
         'Выключение IPTV-пакета': [], 'Смена тарифа': [], 'Включение ограничения функций ТВ': [],
         'Без границ платно. Отключение': [], 'Турбокнопка платно (1 сутки)': [], 'Турбокнопка бесплатно': [],
         'Без границ бесплатно. Включение': [], 'Без границ платно. Включение': [],
         'Виртуальное бессмертие. Отключение': [], 'Тайный покупатель. Отправлена анкета': [], 'Бонус-скорость': [],
         'Отключение  ограничения функций ТВ': [], 'Изменение пакета HD. Закрытие лендинг-информера': [],
         'Родительский контроль. Включение': [], 'Отключение управления услугами по паролю': [],
         'Родительский контроль. Выключение': [], 'Восстановление пароля': [],
         'Становление участником бонусной программы': [], 'Изменение схемы оплаты': [], 'Футболка Ситилинк': [],
         'Отключение автоматической активации ГП': [],
         'Закрытие информатора об изменении уведомлений через ВК платформу': [],
         'Включение управления услугами по паролю': [], 'Общий счет. Отсоединение реципиента': [],
         'Общий счет. Отсоединение от донора': [], 'Отключение услуги "Стоп-тариф"': [],
         'Подписка на ivi. Включение триала': [], 'Подписка на ivi. Отключение автопродления подписки': [],
         'Отключение скидки': []}
    t2 = {'Добавление в Обращались с номеров(t)': [],
          'Обращение в службу заботы о клиентах(t)': [], 'Выключение IPTV-пакета(Event)(t)': [],
          'Включение IPTV-пакета(Event)(t)': [],
          'Включение услуги "Ограничение функций ТВ"(t)': [], 'Отключение услуги Аренда ТВ-приставки(t)': [],
          'Оборудование(t)': [], 'Изменение истории(t)': [], 'Продление действия тарифа(t)': [],
          'Предложение IPTV(t)': [],
          'Активация точки подключения на сутки(t)': [], 'Смена Тарифа(Event)(t)': [],
          'Удаление из Обращались с номеров(t)': [],
          'Смена пароля(Event)(t)': [], 'Предложение ТВ(t)': [], 'Внутреннее сообщение(t)': [],
          'Операция с mac-адресом(t)': [],
          'Закрепление сообщения(t)': [], 'Перенос денежных средств(t)': [], 'Изменение данных клиента(t)': [],
          'Возвращение клиента(t)': [], 'Уведомления: подключение(t)': [], 'Уведомления: подтверждение(t)': [],
          'Состояние клиентского оборудования(t)': [], 'Смена схемы оплаты(t)': [],
          'Включение услуги "IPTV-Бонус"(t)': [],
          'Включена 20% скидка(t)': [], 'Включение услуги Аренда ТВ-приставки(t)': [],
          'Отключение услуги "IPTV-Бонус"(t)': [],
          'Отключение скидки 20%(t)': [], 'Предложение тарифа(t)': [], 'Активация гарантированного платежа(t)': [],
          'Включение интернета на 20 минут(Event)(t)': [], 'Изменение контактных телефонов(t)': [], 'Внесение(t)': [],
          'Смена IP-адреса(t)': [], 'Блокировка(t)': [], 'Реестр договоров(t)': [], 'Смена следующего тарифа(t)': [],
          'Предложение акции "Пригласи друга"(t)': [], 'Предложение ТВ-пакета(t)': [], 'Предложение автоплатежа(t)': [],
          'Активация ГП с IVR(t)': [], 'Включение Бесплатной аренды(t)': [], 'Замена оборудования(t)': [],
          'Удаление телефона из записи(t)': [], 'Без границ бесплатно. Включение(Event)(t)': [],
          'Отключение скидки(Event)(t)': [],
          'Включена 30% скидка(t)': [], 'Активация автоматического гарантированного платежа(t)': [],
          'Отключение услуги Автоплатёж(Event)(t)': [], 'Расторжение(t)': [],
          'Включена рассрочка за "Wi-Fi маршрутизатор 2.4 ГГц - TP-LINK WR-850N или аналог"(t)': [],
          'Отмена гарантированного платежа(t)': [], 'Манипуляции с оборудованием(t)': [], 'Включена 10% скидка(t)': [],
          'Блокировка лицевого счета(t)': [], 'Включение блокировки лицевого счета(t)': [],
          'Чек лист выполненных работ при регистрации(t)': [], 'Разблокировка(t)': [], 'Добавление IP-адреса(t)': [],
          'Удаление ip-адреса(t)': [], 'Предложение расширенной гарантии на ТВ приставку(t)': [],
          'Без границ бесплатно. Отключение(Event)(t)': [], 'Уведомления: отключение(t)': [],
          'Отключение скидки 10%(t)': [],
          'Включение рассрочки за "Подключение"(t)': [], 'Окончание рассрочки за подключение(t)': [],
          'Предложение доп.гарантии на роутер(t)': [], 'Предложение роутера(t)': [], 'Тайный покупатель(t)': [],
          'Возвращение гарантированного платежа(t)': [], 'Включена рассрочка за "IPTV-приставка"(t)': [],
          'Включение старых условий аренды(t)': [], 'Информер ВК. Показ(t)': [],
          'Включение интернета на 20 минут(t)': [],
          'Показ информатора об изменении уведомлений через ВК платформу(t)': [],
          'Гарантированный платеж за деньги(t)': [],
          'Просмотр раздела Тайный покупатель(t)': [], 'Включение интернета на 20 минут с IVR(t)': [],
          'Турбокнопка платно (1 час)(t)': [], 'Включение автоматической активации ГП(t)': [],
          'Отключение услуги Автоплатёж(t)': [], 'Информер ВК. Закрытие(t)': [],
          'Виртуальное бессмертие. Включение(t)': [],
          'Виртуальное бессмертие. Использование(t)': [], "Без границ бесплатно. Отключение(t)": [],
          'Принято заявление и доп. соглашение по переезду(t)': [], 'Смена пароля(t)': [],
          'Абонент оставил отзыв в Личном кабинете(t)': [],
          'Получение подарка в ЛК: сутки интернета на максимальной скорости(t)': [],
          'Получение подарка в ЛК: 1 месяц бесплатного просмотра IPTV(t)': [], 'Включение IPTV-пакета(t)': [],
          'Выключение IPTV-пакета(t)': [], 'Смена тарифа(t)': [], 'Включение ограничения функций ТВ(t)': [],
          'Без границ платно. Отключение(t)': [],
          'Турбокнопка платно (1 сутки)(t)': [], 'Турбокнопка бесплатно(t)': [],
          'Без границ бесплатно. Включение(t)': [], 'Без границ платно. Включение(t)': [],
          'Виртуальное бессмертие. Отключение(t)': [], 'Тайный покупатель. Отправлена анкета(t)': [],
          'Бонус-скорость(t)': [],
          'Отключение  ограничения функций ТВ(t)': [], 'Изменение пакета HD. Закрытие лендинг-информера(t)': [],
          'Родительский контроль. Включение(t)': [], 'Отключение управления услугами по паролю(t)': [],
          'Родительский контроль. Выключение(t)': [], 'Восстановление пароля(t)': [],
          'Становление участником бонусной программы(t)': [], 'Изменение схемы оплаты(t)': [],
          'Футболка Ситилинк(t)': [],
          'Отключение автоматической активации ГП(t)': [],
          'Закрытие информатора об изменении уведомлений через ВК платформу(t)': [],
          'Включение управления услугами по паролю(t)': [], 'Общий счет. Отсоединение реципиента(t)': [],
          'Общий счет. Отсоединение от донора(t)': [], 'Отключение услуги "Стоп-тариф"(t)': [],
          'Подписка на ivi. Включение триала(t)': [], 'Подписка на ivi. Отключение автопродления подписки(t)': [],
          'Отключение скидки(t)': []}
    for key in d.keys():
        for i in users:
            d[key].append(0)
    for key in t2.keys():
        for i in users:
            t2[key].append(0)
    # Добовление параметров в словарь
    for y, i in enumerate(users, start=0):
        d["id"][y] = i.id
        print(i.id)
        d["day_or_month_contract"][y] = i.day_or_month_contract
        d['blocked'][y] = i.blocked
        # i.events события этого юзера
        type_event = {}
        temp = {}
        for x in i.events:
            if not len(type_event.keys()) == 0:

                for z in type_event.keys():
                    if x.type_event == z:
                        type_event[z].append(x.time)
                    else:
                        temp.update({x.type_event: [x.time]})
            else:
                temp.update({x.type_event: [x.time]})
            type_event.update(temp)
            d[x.type_event][y] += 1
        for key in type_event.keys():
            time = 99999999898985451252545554545454551514514599999999999999999999999999999999999999999999999999999999999
            for z in type_event[key]:
                from datetime import datetime

                d1 = datetime.strptime("2021-04-29 23:52:28", "%Y-%m-%d %H:%M:%S")

                d2 = datetime.strptime(z, "%Y-%m-%d %H:%M:%S")
                d3 = d1 - d2
                d4 = d3.seconds + (d3.days * 24 * 3600)
                if d4 < time:
                    time = d4
            t2[key + "(t)"][y] = time
        # i.lk_events события этого юзера
        type_event = {}
        temp = {}
        for x in i.lk_events:
            if not len(type_event.keys()) == 0:

                for z in type_event.keys():
                    if x.type_event == z:
                        type_event[z].append(x.time)
                    else:
                        temp.update({x.type_event: [x.time]})
            else:
                temp.update({x.type_event: [x.time]})
            type_event.update(temp)
            d[x.type_event][y] += 1
        for key in type_event.keys():
            time = 99999999898985451252545554545454551514514599999999999999999999999999999999999999999999999999999999999
            for z in type_event[key]:
                from datetime import datetime

                d1 = datetime.strptime("2021-04-29 23:52:28", r"%Y-%m-%d %H:%M:%S")

                d2 = datetime.strptime(z, r"%Y-%m-%d %H:%M:%S")
                d3 = d1 - d2
                d4 = d3.seconds + (d3.days * 24 * 3600)
                if d4 < time:
                    time = d4
            t2[key + "(t)"][y] = time

        # Заполнение пропусков в таблице
    if time:
        d.update(t2)
    hr = pd.DataFrame(data=d)
    return hr


def test_convertor(users: list, time: bool = False):
    """Функция ля конвертирования списка экземпляров класса User в pandas.DataFrame"""
    # Импортируем pandas
    import pandas as pd

    d = {'id': [], 'day_or_month_contract': [], 'Добавление в Обращались с номеров': [],
         'Обращение в службу заботы о клиентах': [], 'Выключение IPTV-пакета(Event)': [],
         'Включение IPTV-пакета(Event)': [],
         'Включение услуги "Ограничение функций ТВ"': [], 'Отключение услуги Аренда ТВ-приставки': [],
         'Оборудование': [], 'Изменение истории': [], 'Продление действия тарифа': [], 'Предложение IPTV': [],
         'Активация точки подключения на сутки': [], 'Смена Тарифа(Event)': [], 'Удаление из Обращались с номеров': [],
         'Смена пароля(Event)': [], 'Предложение ТВ': [], 'Внутреннее сообщение': [], 'Операция с mac-адресом': [],
         'Закрепление сообщения': [], 'Перенос денежных средств': [], 'Изменение данных клиента': [],
         'Возвращение клиента': [], 'Уведомления: подключение': [], 'Уведомления: подтверждение': [],
         'Состояние клиентского оборудования': [], 'Смена схемы оплаты': [], 'Включение услуги "IPTV-Бонус"': [],
         'Включена 20% скидка': [], 'Включение услуги Аренда ТВ-приставки': [], 'Отключение услуги "IPTV-Бонус"': [],
         'Отключение скидки 20%': [], 'Предложение тарифа': [], 'Активация гарантированного платежа': [],
         'Включение интернета на 20 минут(Event)': [], 'Изменение контактных телефонов': [], 'Внесение': [],
         'Смена IP-адреса': [], 'Блокировка': [], 'Реестр договоров': [], 'Смена следующего тарифа': [],
         'Предложение акции "Пригласи друга"': [], 'Предложение ТВ-пакета': [], 'Предложение автоплатежа': [],
         'Активация ГП с IVR': [], 'Включение Бесплатной аренды': [], 'Замена оборудования': [],
         'Удаление телефона из записи': [], 'Без границ бесплатно. Включение(Event)': [],
         'Отключение скидки(Event)': [],
         'Включена 30% скидка': [], 'Активация автоматического гарантированного платежа': [],
         'Отключение услуги Автоплатёж(Event)': [], 'Расторжение': [],
         'Включена рассрочка за "Wi-Fi маршрутизатор 2.4 ГГц - TP-LINK WR-850N или аналог"': [],
         'Отмена гарантированного платежа': [], 'Манипуляции с оборудованием': [], 'Включена 10% скидка': [],
         'Блокировка лицевого счета': [], 'Включение блокировки лицевого счета': [],
         'Чек лист выполненных работ при регистрации': [], 'Разблокировка': [], 'Добавление IP-адреса': [],
         'Удаление ip-адреса': [], 'Предложение расширенной гарантии на ТВ приставку': [],
         'Без границ бесплатно. Отключение(Event)': [], 'Уведомления: отключение': [], 'Отключение скидки 10%': [],
         'Включение рассрочки за "Подключение"': [], 'Окончание рассрочки за подключение': [],
         'Предложение доп.гарантии на роутер': [], 'Предложение роутера': [], 'Тайный покупатель': [],
         'Возвращение гарантированного платежа': [], 'Включена рассрочка за "IPTV-приставка"': [],
         'Включение старых условий аренды': [], 'Информер ВК. Показ': [], 'Включение интернета на 20 минут': [],
         'Показ информатора об изменении уведомлений через ВК платформу': [], 'Гарантированный платеж за деньги': [],
         'Просмотр раздела Тайный покупатель': [], 'Включение интернета на 20 минут с IVR': [],
         'Турбокнопка платно (1 час)': [], 'Включение автоматической активации ГП': [],
         'Отключение услуги Автоплатёж': [], 'Информер ВК. Закрытие': [], 'Виртуальное бессмертие. Включение': [],
         'Виртуальное бессмертие. Использование': [], "Без границ бесплатно. Отключение": [],
         'Принято заявление и доп. соглашение по переезду': [], 'Смена пароля': [],
         'Абонент оставил отзыв в Личном кабинете': [],
         'Получение подарка в ЛК: сутки интернета на максимальной скорости': [],
         'Получение подарка в ЛК: 1 месяц бесплатного просмотра IPTV': [], 'Включение IPTV-пакета': [],
         'Выключение IPTV-пакета': [], 'Смена тарифа': [], 'Включение ограничения функций ТВ': [],
         'Без границ платно. Отключение': [], 'Турбокнопка платно (1 сутки)': [], 'Турбокнопка бесплатно': [],
         'Без границ бесплатно. Включение': [], 'Без границ платно. Включение': [],
         'Виртуальное бессмертие. Отключение': [], 'Тайный покупатель. Отправлена анкета': [], 'Бонус-скорость': [],
         'Отключение  ограничения функций ТВ': [], 'Изменение пакета HD. Закрытие лендинг-информера': [],
         'Родительский контроль. Включение': [], 'Отключение управления услугами по паролю': [],
         'Родительский контроль. Выключение': [], 'Восстановление пароля': [],
         'Становление участником бонусной программы': [], 'Изменение схемы оплаты': [], 'Футболка Ситилинк': [],
         'Отключение автоматической активации ГП': [],
         'Закрытие информатора об изменении уведомлений через ВК платформу': [],
         'Включение управления услугами по паролю': [], 'Общий счет. Отсоединение реципиента': [],
         'Общий счет. Отсоединение от донора': [], 'Отключение услуги "Стоп-тариф"': [],
         'Подписка на ivi. Включение триала': [], 'Подписка на ivi. Отключение автопродления подписки': [],
         'Отключение скидки': []}
    t2 = {'Добавление в Обращались с номеров(t)': [],
          'Обращение в службу заботы о клиентах(t)': [], 'Выключение IPTV-пакета(Event)(t)': [],
          'Включение IPTV-пакета(Event)(t)': [],
          'Включение услуги "Ограничение функций ТВ"(t)': [], 'Отключение услуги Аренда ТВ-приставки(t)': [],
          'Оборудование(t)': [], 'Изменение истории(t)': [], 'Продление действия тарифа(t)': [],
          'Предложение IPTV(t)': [],
          'Активация точки подключения на сутки(t)': [], 'Смена Тарифа(Event)(t)': [],
          'Удаление из Обращались с номеров(t)': [],
          'Смена пароля(Event)(t)': [], 'Предложение ТВ(t)': [], 'Внутреннее сообщение(t)': [],
          'Операция с mac-адресом(t)': [],
          'Закрепление сообщения(t)': [], 'Перенос денежных средств(t)': [], 'Изменение данных клиента(t)': [],
          'Возвращение клиента(t)': [], 'Уведомления: подключение(t)': [], 'Уведомления: подтверждение(t)': [],
          'Состояние клиентского оборудования(t)': [], 'Смена схемы оплаты(t)': [],
          'Включение услуги "IPTV-Бонус"(t)': [],
          'Включена 20% скидка(t)': [], 'Включение услуги Аренда ТВ-приставки(t)': [],
          'Отключение услуги "IPTV-Бонус"(t)': [],
          'Отключение скидки 20%(t)': [], 'Предложение тарифа(t)': [], 'Активация гарантированного платежа(t)': [],
          'Включение интернета на 20 минут(Event)(t)': [], 'Изменение контактных телефонов(t)': [], 'Внесение(t)': [],
          'Смена IP-адреса(t)': [], 'Блокировка(t)': [], 'Реестр договоров(t)': [], 'Смена следующего тарифа(t)': [],
          'Предложение акции "Пригласи друга"(t)': [], 'Предложение ТВ-пакета(t)': [], 'Предложение автоплатежа(t)': [],
          'Активация ГП с IVR(t)': [], 'Включение Бесплатной аренды(t)': [], 'Замена оборудования(t)': [],
          'Удаление телефона из записи(t)': [], 'Без границ бесплатно. Включение(Event)(t)': [],
          'Отключение скидки(Event)(t)': [],
          'Включена 30% скидка(t)': [], 'Активация автоматического гарантированного платежа(t)': [],
          'Отключение услуги Автоплатёж(Event)(t)': [], 'Расторжение(t)': [],
          'Включена рассрочка за "Wi-Fi маршрутизатор 2.4 ГГц - TP-LINK WR-850N или аналог"(t)': [],
          'Отмена гарантированного платежа(t)': [], 'Манипуляции с оборудованием(t)': [], 'Включена 10% скидка(t)': [],
          'Блокировка лицевого счета(t)': [], 'Включение блокировки лицевого счета(t)': [],
          'Чек лист выполненных работ при регистрации(t)': [], 'Разблокировка(t)': [], 'Добавление IP-адреса(t)': [],
          'Удаление ip-адреса(t)': [], 'Предложение расширенной гарантии на ТВ приставку(t)': [],
          'Без границ бесплатно. Отключение(Event)(t)': [], 'Уведомления: отключение(t)': [],
          'Отключение скидки 10%(t)': [],
          'Включение рассрочки за "Подключение"(t)': [], 'Окончание рассрочки за подключение(t)': [],
          'Предложение доп.гарантии на роутер(t)': [], 'Предложение роутера(t)': [], 'Тайный покупатель(t)': [],
          'Возвращение гарантированного платежа(t)': [], 'Включена рассрочка за "IPTV-приставка"(t)': [],
          'Включение старых условий аренды(t)': [], 'Информер ВК. Показ(t)': [],
          'Включение интернета на 20 минут(t)': [],
          'Показ информатора об изменении уведомлений через ВК платформу(t)': [],
          'Гарантированный платеж за деньги(t)': [],
          'Просмотр раздела Тайный покупатель(t)': [], 'Включение интернета на 20 минут с IVR(t)': [],
          'Турбокнопка платно (1 час)(t)': [], 'Включение автоматической активации ГП(t)': [],
          'Отключение услуги Автоплатёж(t)': [], 'Информер ВК. Закрытие(t)': [],
          'Виртуальное бессмертие. Включение(t)': [],
          'Виртуальное бессмертие. Использование(t)': [], "Без границ бесплатно. Отключение(t)": [],
          'Принято заявление и доп. соглашение по переезду(t)': [], 'Смена пароля(t)': [],
          'Абонент оставил отзыв в Личном кабинете(t)': [],
          'Получение подарка в ЛК: сутки интернета на максимальной скорости(t)': [],
          'Получение подарка в ЛК: 1 месяц бесплатного просмотра IPTV(t)': [], 'Включение IPTV-пакета(t)': [],
          'Выключение IPTV-пакета(t)': [], 'Смена тарифа(t)': [], 'Включение ограничения функций ТВ(t)': [],
          'Без границ платно. Отключение(t)': [],
          'Турбокнопка платно (1 сутки)(t)': [], 'Турбокнопка бесплатно(t)': [],
          'Без границ бесплатно. Включение(t)': [], 'Без границ платно. Включение(t)': [],
          'Виртуальное бессмертие. Отключение(t)': [], 'Тайный покупатель. Отправлена анкета(t)': [],
          'Бонус-скорость(t)': [],
          'Отключение  ограничения функций ТВ(t)': [], 'Изменение пакета HD. Закрытие лендинг-информера(t)': [],
          'Родительский контроль. Включение(t)': [], 'Отключение управления услугами по паролю(t)': [],
          'Родительский контроль. Выключение(t)': [], 'Восстановление пароля(t)': [],
          'Становление участником бонусной программы(t)': [], 'Изменение схемы оплаты(t)': [],
          'Футболка Ситилинк(t)': [],
          'Отключение автоматической активации ГП(t)': [],
          'Закрытие информатора об изменении уведомлений через ВК платформу(t)': [],
          'Включение управления услугами по паролю(t)': [], 'Общий счет. Отсоединение реципиента(t)': [],
          'Общий счет. Отсоединение от донора(t)': [], 'Отключение услуги "Стоп-тариф"(t)': [],
          'Подписка на ivi. Включение триала(t)': [], 'Подписка на ivi. Отключение автопродления подписки(t)': [],
          'Отключение скидки(t)': []}
    for key in d.keys():
        for i in users:
            d[key].append(0)
    for key in t2.keys():
        for i in users:
            t2[key].append(0)
    # Добовление параметров в словарь
    for y, i in enumerate(users, start=0):
        d["id"][y] = i.id
        print(i.id)
        d["day_or_month_contract"][y] = i.day_or_month_contract
        # i.events события этого юзера
        type_event = {}
        temp = {}
        for x in i.events:
            if not len(type_event.keys()) == 0:

                for z in type_event.keys():
                    if x.type_event == z:
                        type_event[z].append(x.time)
                    else:
                        temp.update({x.type_event: [x.time]})
            else:
                temp.update({x.type_event: [x.time]})
            type_event.update(temp)
            d[x.type_event][y] += 1
        for key in type_event.keys():
            time = 99999999898985451252545554545454551514514599999999999999999999999999999999999999999999999999999999999
            for z in type_event[key]:
                from datetime import datetime

                d1 = datetime.strptime("2021-04-29 23:52:28", "%Y-%m-%d %H:%M:%S")

                d2 = datetime.strptime(z, "%Y-%m-%d %H:%M:%S")
                d3 = d1 - d2
                d4 = d3.seconds + (d3.days * 24 * 3600)
                if d4 < time:
                    time = d4
            t2[key + "(t)"][y] = time
        # i.lk_events события этого юзера
        type_event = {}
        temp = {}
        for x in i.lk_events:
            if not len(type_event.keys()) == 0:

                for z in type_event.keys():
                    if x.type_event == z:
                        type_event[z].append(x.time)
                    else:
                        temp.update({x.type_event: [x.time]})
            else:
                temp.update({x.type_event: [x.time]})
            type_event.update(temp)
            d[x.type_event][y] += 1
        for key in type_event.keys():
            time = 99999999898985451252545554545454551514514599999999999999999999999999999999999999999999999999999999999
            for z in type_event[key]:
                from datetime import datetime

                d1 = datetime.strptime("2021-04-29 23:52:28", r"%Y-%m-%d %H:%M:%S")

                d2 = datetime.strptime(z, r"%Y-%m-%d %H:%M:%S")
                d3 = d1 - d2
                d4 = d3.seconds + (d3.days * 24 * 3600)
                if d4 < time:
                    time = d4
            t2[key + "(t)"][y] = time

        # Заполнение пропусков в таблице
    if time:
        d.update(t2)
    hr = pd.DataFrame(data=d)
    return hr


class User:
    """Класс User хранит имформацию о пользователе."""

    def __init__(self, id: int, day_or_month_contract: int, events: list, lk_events: list, blocked, ):
        self.blocked = blocked
        self.lk_events = lk_events
        self.events = events
        self.day_or_month_contract = day_or_month_contract
        self.id = id

    def __str__(self):
        """При конвертации в класс str"""
        return f"<id = {str(self.id)}, day_or_month_contract = {str(self.day_or_month_contract)}, events = " \
               f"{str(self.events)}, lk_events = {str(self.lk_events)}, blocked = {str(self.blocked)}>"

    def __repr__(self):
        return f"<id = {str(self.id)}, day_or_month_contract = {str(self.day_or_month_contract)}, events = " \
               f"{str(self.events)}, lk_events = {str(self.lk_events)}, blocked = {str(self.blocked)}>"


class Table:
    """Класс Table нужен для получения пользователей из csv таблиц. filenames: list - Сюда пишите названия файлов
    таблиц, в формате списка, пример: ["01_all_users.csv", "02_events_log.csv", "03_lk_events_log.csv",
    "04_is_blocked.csv"] """

    def __init__(self, filenames: list):
        # Импорт csv + Указание self.filenames
        self.filenames = filenames
        from csv import reader
        # Чтение csv-файлов
        with open(self.filenames[0], newline='', encoding='utf-8') as csvfile:
            users = reader(csvfile, delimiter=",")
            self.users = [i for i in users]
        with open(self.filenames[1], newline='', encoding='utf-8') as csvfile:
            events = reader(csvfile, delimiter=",")
            self.events = [i for i in events]
        with open(self.filenames[2], newline='', encoding='utf-8') as csvfile:
            lk_events = reader(csvfile, delimiter=",")
            self.lk_events = [i for i in lk_events]
        with open(self.filenames[3], newline='', encoding='utf-8') as csvfile:
            blocked = reader(csvfile, delimiter=",")
            self.blocked = [i for i in blocked]
        with open(self.filenames[4], newline='', encoding='utf-8') as csvfile:
            is_blocked = reader(csvfile, delimiter=",")
            self.is_blocked = [i for i in is_blocked]
    def write_answer(self, data):
        from csv import writer, QUOTE_MINIMAL
        with open('eggs.csv', 'w', newline='') as csvfile:
            spamwriter = writer(csvfile, delimiter=',',)
            spamwriter.writerow(["contract_id","blocked"])
            for x,i in enumerate(data):
                spamwriter.writerow([self.is_blocked[x][0],i])
    def get_all_users(self):
        """Получить всех пользователей из таблицы"""
        # Иницилизируем переменные
        users = []
        # Читаем данные из таблицы self.users
        for x, i in enumerate(self.users):
            if x != 0:
                blocked = ""
                # Иницилизируем переменные
                id = int(i[0])
                day_or_month_contract = i[1]
                events = []
                for i in self.events:
                    if i[0] == str(id):
                        events.append(Event(i[1], i[2], ))
                lk_events = []
                for i in self.lk_events:
                    if i[0] == str(id):
                        lk_events.append(LkEvent(i[1], i[2], ))
                for i in self.blocked:
                    if i[0] == str(id):
                        blocked = i[1]
                # Добавляем класс User
                if not blocked == '':
                    users.append(User(id, int(day_or_month_contract), events, lk_events, int(blocked)))
        return users

    def get_all_test_user(self):
        users = []
        for x, i in enumerate(self.users):
            if x != 0:
                for c in self.is_blocked:
                    if i[0] == c[0]:

                        # Иницилизируем переменные
                        id = int(i[0])
                        day_or_month_contract = i[1]
                        events = []
                        for i in self.events:
                            if i[0] == str(id):
                                events.append(Event(i[1], i[2], ))
                        lk_events = []
                        for i in self.lk_events:
                            if i[0] == str(id):
                                lk_events.append(LkEvent(i[1], i[2], ))
                        # Добавляем класс User
                        users.append(User(id, int(day_or_month_contract), events, lk_events, None))
        return users


class Event:
    """ В Классе Event храница информация о ивенте(см. 02_events_log.csv )"""

    def __init__(self, time: str, type_event: str, ):
        """time - передаёться время в формате str
        type_event - пердаёться тип эвента в формате str
        """
        self.time = time
        if "Включение IPTV-пакета" == type_event:
            self.type_event = "Включение IPTV-пакета(Event)"
        elif "Выключение IPTV-пакета" == type_event:
            self.type_event = "Выключение IPTV-пакета(Event)"
        elif "Смена тарифа" == type_event:
            self.type_event = "Смена Тарифа(Event)"

        elif "Включение интернета на 20 минут" == type_event:
            self.type_event = "Включение интернета на 20 минут(Event)"

        elif "Без границ бесплатно. Включение" == type_event:
            self.type_event = "Без границ бесплатно. Включение(Event)"

        elif "Отключение скидки" == type_event:
            self.type_event = "Отключение скидки(Event)"

        elif "Без границ бесплатно. Отключение" == type_event:
            self.type_event = "Без границ бесплатно. Отключение(Event)"

        elif "Отключение услуги Автоплатёж" == type_event:
            self.type_event = "Отключение услуги Автоплатёж(Event)"
        elif "Смена пароля" == type_event:
            self.type_event = "Смена пароля(Event)"
        else:
            self.type_event = type_event

    def __repr__(self):
        return f"<class Event time = '{self.time}', type_event = '{self.type_event}'>"


class LkEvent:
    """ В Классе LKEvent храница информация о ивентах в личном кабинете(см. 03_lk_events_log.csv )"""

    def __init__(self, time: str, type_event: str, ):
        """time - передаёться время в формате str
        type_event - пердаёться тип эвента в формате str
        """
        self.time = time
        self.type_event = type_event

    def __repr__(self):
        return f"<class Event time = '{self.time}', type_event = '{self.type_event}'>"
